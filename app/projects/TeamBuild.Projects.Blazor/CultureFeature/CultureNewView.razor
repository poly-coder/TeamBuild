@inherits TbCustomView
@using System.ComponentModel.DataAnnotations

@{
    Render(__builder);
}

@code {
    [Parameter]
    public Func<FormModel, Task>? OnSave { get; set; }

    #region [ Form ]

    [Parameter]
    public FormModel? InitialForm { get; set; }
    protected FormModel? form;
    private FormModel? previousInitialForm;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        if (form is null || previousInitialForm is null || !previousInitialForm.IsEqualTo(InitialForm))
        {
            previousInitialForm = InitialForm?.Clone() ?? new FormModel();
            form = InitialForm?.Clone() ?? new FormModel();
        }
    }

    public class FormModel
    {
        [Required] public string CultureCode { get; set; } = "";

        [Required] public string EnglishName { get; set; } = "";

        [Required] public string NativeName { get; set; } = "";

        public bool GoToDetails { get; set; }

        public FormModel Clone()
        {
            return new FormModel
            {
                CultureCode = CultureCode,
                EnglishName = EnglishName,
                NativeName = NativeName
            };
        }

        public bool IsEqualTo(FormModel? newOne)
        {
            if (newOne is null) return false;

            return CultureCode == newOne.CultureCode &&
                   EnglishName == newOne.EnglishName &&
                   NativeName == newOne.NativeName &&
                   GoToDetails == newOne.GoToDetails;
        }
    }

    #endregion [ Form ]


    protected bool isSaving;
    protected Exception? exception;

    protected async Task HandleValidSubmit()
    {
        if (form is null || isSaving || OnSave is null) return;

        isSaving = true;
        exception = null;

        StateHasChanged();

        try
        {
            await OnSave(form);
        }
        catch (Exception ex)
        {
            exception = ex;
        }
        finally
        {
            isSaving = false;
        }
    }
}
